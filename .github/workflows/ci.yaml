name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths-ignore:
      - 'pyproject.toml'
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']
        poetry-version: ['1.6.1', '1.7.1']

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade poetry
          poetry install
      - name: Run tests
        run: poetry run pytest tests/

  pipx-test:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pipx
          pipx install poetry
          pipx inject poetry .
      - name: Run tests
        run: poetry -vvv protoc --proto_path=tests --python_out=.
